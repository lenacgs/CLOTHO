
private void close() {
		try {
			connect.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
public void one_increment_write_skew(Long key1 , Long key2 , Long amount2) throws SQLException {
		// read account 1
		PreparedStatement stmt = connect.prepareStatement("SELECT value " + "FROM " + "ACCOUNTS" + " WHERE id = ?");
		stmt.setLong(1, key1);
		ResultSet rs = stmt.executeQuery();
		rs.next();
		Long read_val = rs.getLong("VALUE");
		System.out.println(read_val);
		// update account 2
		if (read_val + amount2 < 1000 ) {
			PreparedStatement stmt1 = connect.prepareStatement("UPDATE ACCOUNTS SET value = ?" + " WHERE id = ?");
			stmt1.setLong(1, amount2);
			stmt1.setLong(2, key2);
			stmt1.executeUpdate();
		}
	}
	
	public void one_read(Long key) throws SQLException {
		PreparedStatement stmt = connect.prepareStatement("SELECT value " + "FROM " + "ACCOUNTS" + " WHERE id = ?");
		stmt.setLong(1, key);
		ResultSet rs = stmt.executeQuery();
		rs.next();
		Long read_val = rs.getLong("VALUE");
		assert (read_val == 100);
		System.out.println(read_val);
	}

	public void one_write(Long key, Long new_val) throws SQLException {
		PreparedStatement stmt1 = connect.prepareStatement("UPDATE ACCOUNTS SET value = ?" + " WHERE id = ?");
		stmt1.setLong(1, new_val);
		stmt1.setLong(2, key);
		stmt1.executeUpdate();
	}

	

	public void two_reads_long_fork(Long key1, Long key2) throws SQLException {
		// read account 1
		PreparedStatement stmt1 = connect.prepareStatement("SELECT value " + "FROM " + "ACCOUNTS" + " WHERE id = ?");
		stmt1.setLong(1, key1);
		ResultSet rs1 = stmt1.executeQuery();
		rs1.next();
		Long read_val1 = rs1.getLong("VALUE");
		System.out.println(read_val1);

		// read account 2
		PreparedStatement stmt2 = connect.prepareStatement("SELECT value " + "FROM " + "ACCOUNTS" + " WHERE id = ?");
		stmt2.setLong(1, key2);
		ResultSet rs2 = stmt2.executeQuery();
		rs2.next();
		Long read_val2 = rs2.getLong("VALUE");
		System.out.println(read_val2);
	}